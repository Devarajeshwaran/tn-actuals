
buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'jacoco'

group = 'com.tn'
version = '0.0.5'
sourceCompatibility = 1.8

jar {
    baseName = 'actuals'
    version =  '0.0.5'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
	implementation('org.springframework.boot:spring-boot-starter-web')
	compile group: 'org.webjars.bower', name: 'summernote', version: '0.8.12'
	//providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	compile "org.springframework.boot:spring-boot-starter-tomcat"

    testImplementation('org.springframework.boot:spring-boot-starter-test')
	compile 'org.webjars:jquery:3.3.1'
	compile 'org.webjars:bootstrap:4.1.3'
	compile 'org.webjars:chartjs:2.7.2'
	compile group: 'org.webjars.npm', name: 'jexcel', version: '1.5.4'
	compile 'org.webjars.npm:feather-icons:4.7.3'
	compile 'org.webjars:d3js:5.5.0'
	compile 'org.webjars:momentjs:2.22.2'
	compile 'org.webjars.bower:bootstrap-toggle:2.2.2'
	compile 'org.webjars.npm:easy-autocomplete:1.3.5'
	compile 'org.webjars:popper.js:1.14.4'
	compile 'org.webjars.bower:lokijs:1.4.3'
	runtime "mysql:mysql-connector-java:5.1.47"
	compileOnly 'org.projectlombok:lombok:1.16.20'
	annotationProcessor "org.projectlombok:lombok:1.16.20"
	runtime "ch.qos.logback:logback-classic:1.2.3"
	compile 'javax.annotation:javax.annotation-api:1.3.2'
//	compile group: 'org.apache.shiro', name: 'shiro-spring-boot-web-starter', version: '1.4.0-RC2'
	compile group: 'javax.inject', name: 'javax.inject', version: '1'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.0.5.RELEASE'
	compile group: 'org.webjars', name: 'bootstrap-tokenfield', version: '0.12.1'
	compile group: 'org.webjars', name: 'jquery-ui', version: '1.12.1'
	compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
	compile group: 'org.springframework', name: 'spring-context-support', version: '4.1.0.RELEASE'
	compile 'org.webjars.npm:daterangepicker:3.0.3'
	compile 'org.webjars.npm:accounting-js:1.1.1'


	// apache poi dependencies
	compile group: 'org.apache.poi', name: 'poi', version: '4.0.1'
	compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.0.1'
	compile group: 'org.apache.poi', name: 'poi-ooxml-schemas', version: '4.0.1'
	compile group: 'org.apache.xmlbeans', name: 'xmlbeans', version: '3.0.2'
	compile group: 'com.github.virtuald', name: 'curvesapi', version: '1.06'
	compile group: 'org.apache.commons', name: 'commons-compress', version: '1.18'
	compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.2'
	compile group: 'commons-lang', name: 'commons-lang', version: '2.6'

	// Junit and mockito dependency
	compile group: 'org.mockito', name: 'mockito-core', version: '2.11.0'
	testCompile group: 'junit', name: 'junit', version: '4.12'
	testCompile group: 'com.h2database', name: 'h2', version: '1.4.194'

	compile 'org.webjars.npm:jsgantt-improved:2.1.2'

}

/***************************************************************************************************
 * Task for getting consolidate junit report without code coverage
 * input - execute the robolectric java classes under 'test/java' folder
 * output - unit test report will be generated in root build folder under "reports/allTests" folder
 *          without coverage
 ********************************************************************************************** */

task testReport(type: TestReport) {
	destinationDir = file("$buildDir/reports/allTests")
	reportOn subprojects.collect { it.tasks.withType(Test) }
}

jacoco {
	toolVersion = "0.8.4"
	reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
	}
}

test {
	jacoco {
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
		classDumpDir = file("$buildDir/jacoco/classpathdumps")
	}
}